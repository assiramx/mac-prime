#!/usr/bin/env bash
mac=$(test "`uname`" == "Darwin")

if [[ mac ]]; then
# Close System Preferences to prevent it from overriding the changes below
osascript -e 'tell application "System Preferences" to quit'

# Persistant sudo
sudo -v; while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &

#==============================================================================#
# Boot
#==============================================================================#

# Disable the sound effects on boot
sudo nvram SystemAudioVolume=" "

# Require password immediately after sleep or screen saver begins
defaults write com.apple.screensaver askForPassword -int 1
defaults write com.apple.screensaver askForPasswordDelay -int 0

#==============================================================================#
# System
#==============================================================================#

# Set computer name (as done via System Preferences → Sharing)
sudo scutil --set ComputerName "Mycroft"
sudo scutil --set HostName "mycroft"
sudo scutil --set LocalHostName "mycroft"
sudo defaults write /Library/Preferences/SystemConfiguration/com.apple.smb.server NetBIOSName -string "mycroft"

# Set language and text formats
# Ex. `EUR` or `USD`, `Centimeters` or `Inches`, `en_GB` or `en_US`, `true` or `false`.
defaults write NSGlobalDomain AppleLanguages -array "en" "us"
defaults write NSGlobalDomain AppleLocale -string "en_US@currency=USD"
defaults write NSGlobalDomain AppleMeasurementUnits -string "Inches"
defaults write NSGlobalDomain AppleMetricUnits -bool false

# Allow all apps to be installed
sudo spctl --master-disable

# Prevent Photos from opening automatically when devices are plugged in?
defaults -currentHost write com.apple.ImageCapture disableHotPlug -bool true

# Save screenshots to the Downloads folder
defaults write com.apple.screencapture location -string "${HOME}/Downloads"

# Save screenshots in PNG format (other options: BMP, GIF, JPG, PDF, TIFF)
defaults write com.apple.screencapture type -string "png"

# Disable shadow in screenshots
defaults write com.apple.screencapture disable-shadow -bool true

#==============================================================================#
# Menu Bar
#==============================================================================#

# Menu Bar: Show battery percentage and time?
defaults write com.apple.menuextra.battery ShowPercent -string "YES"
defaults write com.apple.menuextra.battery ShowTime -string "NO"

#==============================================================================#
# Windows
#==============================================================================#

# Change minimize/maximize window effect: `genie`, `suck`, `scale`
defaults write com.apple.dock mineffect -string "genie"

# Minimize windows into their application's icon?
defaults write com.apple.dock minimize-to-application -bool true

# Set scrollbar visibility (`WhenScrolling`, `Automatic` or `Always`)
defaults write NSGlobalDomain AppleShowScrollBars -string "WhenScrolling"

# Adjust toolbar title rollover delay
defaults write NSGlobalDomain NSToolbarTitleViewRolloverDelay -float 0

# Expand the following file Info panes
defaults write com.apple.finder FXInfoPanesExpanded -dict \
  General -bool true  \
  MetaData -bool true \
  OpenWith -bool true \
  Privileges -bool true

# Expand save panel by default?
defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode -bool true
defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode2 -bool true

# Expand print panel by default?
defaults write NSGlobalDomain PMPrintingExpandedStateForPrint -bool true
defaults write NSGlobalDomain PMPrintingExpandedStateForPrint2 -bool true

# Enable the "Are you sure you want to open this application?" dialog?
defaults write com.apple.LaunchServices LSQuarantine -bool false

# Disable the crash reporter
defaults write com.apple.CrashReporter DialogType -string "none"

# Prevent the prompt to use new hard drives as a backup volume?
defaults write com.apple.TimeMachine DoNotOfferNewDisksForBackup -bool true

# Enable save documents to iCloud?
defaults write NSGlobalDomain NSDocumentSaveNewDocumentsToCloud -bool false

#==============================================================================#
# Input, Mouse, Keyboard, & Bluetooth
#==============================================================================#

# Input: Enable automatic capitalization?
defaults write NSGlobalDomain NSAutomaticCapitalizationEnabled -bool false

# Input: Enable smart dashes?
defaults write NSGlobalDomain NSAutomaticDashSubstitutionEnabled -bool false

# Input: Enable automatic period substitution?
defaults write NSGlobalDomain NSAutomaticPeriodSubstitutionEnabled -bool false

# Input: Enable smart quotes?
defaults write NSGlobalDomain NSAutomaticQuoteSubstitutionEnabled -bool false

# Input: Enable auto-correct?
defaults write NSGlobalDomain NSAutomaticSpellingCorrectionEnabled -bool false

# Input: Set a blazingly fast keyboard repeat rate
defaults write NSGlobalDomain KeyRepeat -int 1
defaults write NSGlobalDomain InitialKeyRepeat -int 15

# Input: Enable press-and-hold for keys and the character access menu?
defaults write NSGlobalDomain ApplePressAndHoldEnabled -bool false

# Mouse: Enable "natural" (Lion-style) scrolling?
defaults write NSGlobalDomain com.apple.swipescrolldirection -bool false

# Mouse: Enable scroll gesture with the Ctrl (^) modifier key to zoom
defaults write com.apple.universalaccess closeViewScrollWheelToggle -bool false
defaults write com.apple.universalaccess HIDScrollZoomModifierMask -int 262144

# Keyboard: Enable full keyboard access for all controls (e.g. tab in modal dialogs)
defaults write NSGlobalDomain AppleKeyboardUIMode -int 3

# Keyboard: Follow the keyboard focus while zoomed in?
defaults write com.apple.universalaccess closeViewZoomFollowsFocus -bool false

# Keyboard: Automatically illuminate built-in MacBook keyboard in low light
defaults write com.apple.BezelServices kDim -bool true

# Keyboard: Turn off keyboard illumination when computer is not used for 5 minutes
defaults write com.apple.BezelServices kDimTime -int 300

# Bluetooth: Increase sound quality for Bluetooth headphones/headsets
defaults write com.apple.BluetoothAudioAgent "Apple Bitpool Min (editable)" -int 40

#==============================================================================#
# Screen
#==============================================================================#

# Screen: Enable subpixel font rendering on non-Apple LCDsl
defaults write NSGlobalDomain AppleFontSmoothing -int 1

# Screen: Enable HiDPI display modes (requires restart)
sudo defaults write /Library/Preferences/com.apple.windowserver DisplayResolutionEnabled -bool true

#==============================================================================#
# Energy
#==============================================================================#

# Enable lid wakeup
sudo pmset -a lidwake 1

# Restart automatically on power loss
sudo pmset -a autorestart 1

# Restart automatically if the computer freezes
sudo systemsetup -setrestartfreeze on

# Sleep the display after 15 minutes
sudo pmset -a displaysleep 15

# Disable machine sleep while charging
sudo pmset -c sleep 0

# Set machine sleep to 5 minutes on battery
sudo pmset -b sleep 5

# Set standby delay to 24 hours (default is 1 hour)
sudo pmset -a standbydelay 86400

# Never go into computer sleep mode
sudo systemsetup -setcomputersleep Off > /dev/null

# Hibernation mode
# 0: Disable hibernation (speeds up entering sleep mode)
# 3: Copy RAM to disk so the system state can still be restored in case of a
#    power failure.
sudo pmset -a hibernatemode 0

# Remove the sleep image file to save disk space
sudo rm /private/var/vm/sleepimage
# Create a zero-byte file instead…
# Needs fixing: touch: /private/var/vm/sleepimage: Operation not permitted
sudo touch /private/var/vm/sleepimage
# …and make sure it can’t be rewritten
sudo chflags uchg /private/var/vm/sleepimage

#==============================================================================#
# Logs
#==============================================================================#

# Logs: Disable download history
ln -sf /dev/null ~/Library/Preferences/com.apple.LaunchServices.QuarantineEventsV2

# Logs: Disable recent places list, the integer is the number of items stored in the list
defaults write -g NSNavRecentPlacesLimit -int 0

# Logs: Number of recent items: Applications: None
# Needs fixing: execution error: Not authorized to send Apple events to System Events.
osascript -e 'tell application "System Events" to tell appearance preferences to set recent applications limit to 0'

# Logs: Number of recent items: Documents: None
# Needs fixing: execution error: Not authorized to send Apple events to System Events.
osascript -e 'tell application "System Events" to tell appearance preferences to set recent documents limit to 0'

# Logs: Number of recent items: Servers: None
# Needs fixing: execution error: Not authorized to send Apple events to System Events.
osascript -e 'tell application "System Events" to tell appearance preferences to set recent servers limit to 0'

#==============================================================================#
# Finder
#==============================================================================#

# Finder: Set Home as the default location for new windows
defaults write com.apple.finder NewWindowTarget -string "PfLo"
defaults write com.apple.finder NewWindowTargetPath -string "file://${HOME}/"

# Finder: Set the default view in all Finder windows
# Four-letter codes for the view modes: `icnv`, `Nlsv`, `clmv`, `glyv`
defaults write com.apple.finder FXPreferredViewStyle -string "Nlsv"

# Finder: Set sidebar icon size to medium
defaults write NSGlobalDomain NSTableViewDefaultSizeMode -int 2

# Finder: Show all filename extensions?
defaults write NSGlobalDomain AppleShowAllExtensions -bool true

# Finder: Show hidden files by default?
defaults write com.apple.finder AppleShowAllFiles -bool false

# Finder: Show recent tags?
defaults write com.apple.finder ShowRecentTags -bool false

# Finder: Show toolbar, sidebar, status bar, and path bar?
defaults write com.apple.finder ShowToolbar -bool true
defaults write com.apple.finder ShowSidebar -bool true
defaults write com.apple.finder ShowStatusBar -bool true
defaults write com.apple.finder ShowPathbar -bool true

# Finder: Show icons for hard drives, servers, and removable media on the desktop?
defaults write com.apple.finder ShowExternalHardDrivesOnDesktop -bool false
defaults write com.apple.finder ShowHardDrivesOnDesktop -bool false
defaults write com.apple.finder ShowMountedServersOnDesktop -bool false
defaults write com.apple.finder ShowRemovableMediaOnDesktop -bool false

# Finder: Show the /Volumes and ~/Library folders
sudo chflags nohidden /Volumes

# Finder: Allow quitting via ⌘ + Q?
defaults write com.apple.finder QuitMenuItem -bool true

# Finder: Keep folders on top when sorting by name?
defaults write com.apple.finder _FXSortFoldersFirst -bool true

# Finder: When performing a search, search the current folder by default
defaults write com.apple.finder FXDefaultSearchScope -string "SCcf"

# Finder: Enable the warning when changing a file extension?
defaults write com.apple.finder FXEnableExtensionChangeWarning -bool false

# Finder: Enable the warning before emptying the Trash?
defaults write com.apple.finder WarnOnEmptyTrash -bool true

# Finder: Avoid creating .DS_Store files on network and USB volumes?
defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool true
defaults write com.apple.desktopservices DSDontWriteUSBStores -bool true

# Finder: Automatically open a new window when a volume is mounted?
defaults write com.apple.frameworks.diskimages auto-open-ro-root -bool false
defaults write com.apple.frameworks.diskimages auto-open-rw-root -bool false
defaults write com.apple.finder OpenWindowForNewRemovableDisk -bool false

#==============================================================================#
# Dock, Mission Control, Spaces, & Hot Corners
#==============================================================================#

# Dock: Set the icon size of Dock items to 72 pixels
defaults write com.apple.dock tilesize -int 72

# Dock: Enable magnification?
defaults write com.apple.dock magnification -bool false

# Dock: Set magnification icon size to 48 pixels
defaults write com.apple.dock largesize -float 48

# Dock: Show indicator lights for open applications in the Dock?
defaults write com.apple.dock show-process-indicators -bool true

# Dock: Show only open applications in the Dock?
defaults write com.apple.dock static-only -bool false

# Dock: Enable animation when opening applications?
defaults write com.apple.dock launchanim -bool false

# Dock: Disable dock icon bouncing?
defaults write com.apple.dock no-bouncing -bool true

# Dock: Enable highlight hover effect for the grid view of a stack?
defaults write com.apple.dock mouse-over-hilite-stack -bool false

# Dock: Automatically hide and show?
defaults write com.apple.dock autohide -bool true

# Dock: Remove the auto-hiding Dock delay
defaults write com.apple.dock autohide-delay -float 0

# Dock: Speed up the animation when hiding/showing the Dock, 0 to disable
defaults write com.apple.dock autohide-time-modifier -float 0.3

# Dock: Make Dock icons of hidden applications translucent?
defaults write com.apple.dock showhidden -bool false

# Launchpad: Reset Launchpad, but keep the desktop wallpaper intact
# find "${HOME}/Library/Application Support/Dock" -name "*-*.db" -maxdepth 1 -delete

# Launchpad: Add iOS Simulator to Launchpad
sudo ln -sf "/Applications/Xcode.app/Contents/Developer/Applications/Simulator.app" "/Applications/Simulator.app"

# Hot corners
# 0: no-op
# 2: Mission Control
# 3: Show application windows
# 4: Desktop
# 5: Start screen saver
# 6: Disable screen saver
# 7: Dashboard
# 10: Put display to sleep
# 11: Launchpad
# 12: Notification Center
# 13: Lock Screen
# Top left screen corner → Disabled
defaults write com.apple.dock wvous-tl-corner -int 0
defaults write com.apple.dock wvous-tl-modifier -int 0
# Top right screen corner → Disabled
defaults write com.apple.dock wvous-tr-corner -int 0
defaults write com.apple.dock wvous-tr-modifier -int 0
# Bottom left screen corner → Mission Control
defaults write com.apple.dock wvous-bl-corner -int 0
defaults write com.apple.dock wvous-bl-modifier -int 0
# Bottom right screen corner → Launchpad
defaults write com.apple.dock wvous-br-corner -int 0
defaults write com.apple.dock wvous-br-modifier -int 0

#==============================================================================#
# Safari
#==============================================================================#

# Safari: Enable "Do Not Track"?
defaults write com.apple.Safari SendDoNotTrackHTTPHeader -bool true

# Safari: Deny location services access from websites?
# 0: Deny without Prompting
# 1: Prompt for each website once each day
# 2: Prompt for each website one time only
defaults write com.apple.Safari SafariGeolocationPermissionPolicy -int 0

# Safari: Send search queries to Apple?
defaults write com.apple.Safari UniversalSearchEnabled -bool false

# Safari: Supress search suggestions?
defaults write com.apple.Safari SuppressSearchSuggestions -bool true

# Safari: Press Tab to highlight each item on a web page?
defaults write com.apple.Safari WebKitTabToLinksPreferenceKey -bool true
defaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2TabsToLinks -bool true

# Safari: Show the full URL in the address bar?
defaults write com.apple.Safari ShowFullURLInSmartSearchField -bool true

# Safari: Set the home page to `about:blank` for faster loading
defaults write com.apple.Safari HomePage -string "about:blank"

# Safari: Automatically open safe files after downloading?
defaults write com.apple.Safari AutoOpenSafeDownloads -bool false

# Safari: Hit the backspace key to go to the previous page in history?
defaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2BackspaceKeyNavigationEnabled -bool false

# Safari: Show bookmarks bar?
defaults write com.apple.Safari ShowFavoritesBar -bool false

# Safari: Show sidebar in Top Sites?
defaults write com.apple.Safari ShowSidebarInTopSites -bool false

# Safari: Enable the Develop menu and the Web Inspector?
defaults write com.apple.Safari IncludeDevelopMenu -bool true
defaults write com.apple.Safari WebKitDeveloperExtrasEnabledPreferenceKey -bool true
defaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2DeveloperExtrasEnabled -bool true

# Safari: Add a context menu item for showing the Web Inspector in web views?
defaults write NSGlobalDomain WebKitDeveloperExtras -bool true

# Safari: Enable continuous spell checking?
defaults write com.apple.Safari WebContinuousSpellCheckingEnabled -bool true

# Safari: Enable auto-correct?
defaults write com.apple.Safari WebAutomaticSpellingCorrectionEnabled -bool false

# Safari: Enable AutoFill?
defaults write com.apple.Safari AutoFillFromAddressBook -bool false
defaults write com.apple.Safari AutoFillPasswords -bool true
defaults write com.apple.Safari AutoFillCreditCardData -bool false
defaults write com.apple.Safari AutoFillMiscellaneousForms -bool false

# Safari: Enable plug-ins?
defaults write com.apple.Safari WebKitPluginsEnabled -bool true
defaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2PluginsEnabled -bool true

# Safari: Enable Java?
defaults write com.apple.Safari WebKitJavaEnabled -bool false
defaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2JavaEnabled -bool false
defaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2JavaEnabledForLocalFiles -bool false

# Safari: Warn about fraudulent websites?
defaults write com.apple.Safari WarnAboutFraudulentWebsites -bool true

# Safari: Allow pop-up windows?
defaults write com.apple.Safari WebKitJavaScriptCanOpenWindowsAutomatically -bool false
defaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2JavaScriptCanOpenWindowsAutomatically -bool false

# Safari: Update extensions automatically?
defaults write com.apple.Safari InstallExtensionUpdatesAutomatically -bool true

#==============================================================================#
# Terminal
#==============================================================================#

# Terminal: only use UTF-8 in Terminal.app
defaults write com.apple.terminal StringEncodings -array 4

# Customize the theme in Terminal.app
osascript <<EOD
tell application "Terminal"

local allOpenedWindows
local initialOpenedWindows
local windowID
set themeName to "Dracula"

(* Store the IDs of all the open terminal windows. *)
set initialOpenedWindows to id of every window

(* Open the custom theme so that it gets added to the list
   of available terminal themes (note: this will open two
   additional terminal windows). *)
do shell script "open 'resources/" & themeName & ".terminal'"

(* Wait a little bit to ensure that the custom theme is added. *)
delay 1

(* Set the custom theme as the default terminal theme. *)
set default settings to settings set themeName

(* Get the IDs of all the currently opened terminal windows. *)
set allOpenedWindows to id of every window

repeat with windowID in allOpenedWindows

  (* Close the additional windows that were opened in order
     to add the custom theme to the list of terminal themes. *)
  if initialOpenedWindows does not contain windowID then
    close (every window whose id is windowID)

  (* Change the theme for the initial opened terminal windows
     to remove the need to close them in order for the custom
     theme to be applied. *)
  else
    set current settings of tabs of (every window whose id is windowID) to settings set themeName
  end if

end repeat

end tell
EOD

# Terminal: Enable Secure Keyboard Entry?
# See: https://security.stackexchange.com/a/47786/8918
defaults write com.apple.terminal SecureKeyboardEntry -bool true

# Terminal: Enable the annoying line marks?
defaults write com.apple.Terminal ShowLineMarks -int 0

# Terminal: Remove "you have mail"
rm -rf /var/mail/*

#==============================================================================#
# Activity Monitor
#==============================================================================#

# Activity Monitor: Show the main window when launching Activity Monitor?
defaults write com.apple.ActivityMonitor OpenMainWindow -bool true

# Activity Monitor: Visualize CPU usage in the Activity Monitor Dock icon
defaults write com.apple.ActivityMonitor IconType -int 5

# Activity Monitor: Sort Activity Monitor results by CPU usage
defaults write com.apple.ActivityMonitor SortColumn -string "CPUUsage"
defaults write com.apple.ActivityMonitor SortDirection -int 0

#==============================================================================#
# App Store
#==============================================================================#

# App Store: Enable the automatic update check?
defaults write com.apple.SoftwareUpdate AutomaticCheckEnabled -bool true

# App Store: Check for software updates daily, not just once per week
defaults write com.apple.SoftwareUpdate ScheduleFrequency -int 1

# App Store: Download newly available updates in background?
defaults write com.apple.SoftwareUpdate AutomaticDownload -int 1

# App Store: Install System data files & security updates?
defaults write com.apple.SoftwareUpdate CriticalUpdateInstall -int 1

# App Store: Turn on app auto-update?
defaults write com.apple.commerce AutoUpdate -bool true

# App Store: Allow the computer to reboot automatically on macOS updates?
defaults write com.apple.commerce AutoUpdateRestartRequired -bool false

#==============================================================================#
# Messages
#==============================================================================#

# Messages: Enable automatic emoji substitution?
defaults write com.apple.messageshelper.MessageController SOInputLineSettings -dict-add "automaticEmojiSubstitutionEnablediMessage" -bool false

# Messages: Enable smart quotes?
defaults write com.apple.messageshelper.MessageController SOInputLineSettings -dict-add "automaticQuoteSubstitutionEnabled" -bool false

# Messages: Enable continuous spell checking?
defaults write com.apple.messageshelper.MessageController SOInputLineSettings -dict-add "continuousSpellCheckingEnabled" -bool false

#==============================================================================#
# TextEdit
#==============================================================================#

# TextEdit: Use plain text mode
defaults write com.apple.TextEdit RichText -int 0

# TextEdit: Open and save files as UTF-8
defaults write com.apple.TextEdit PlainTextEncoding -int 4
defaults write com.apple.TextEdit PlainTextEncodingForWrite -int 4

#==============================================================================#
# Sublime Text
#==============================================================================#

# Sublime Text: Install Sublime Text settings
cp ~//resources/Package\ Control.sublime-settings ~/Library/Application\ Support/Sublime\ Text*/Packages/User/
cp ~//resources/Preferences.sublime-settings ~/Library/Application\ Support/Sublime\ Text*/Packages/User/

#==============================================================================#
# Hosts
#==============================================================================#

cp ~//resources/hosts /etc/hosts

#==============================================================================#
# Kill affected applications
#==============================================================================#

for app in         \
"Activity Monitor" \
"Calendar"         \
"cfprefsd"         \
"Contacts"         \
"Dock"             \
"Finder"           \
"Messages"         \
"Photos"           \
"Safari"           \
"Sublime Text"     \
"SystemUIServer"   \
"Terminal"
do killall "${app}" &> /dev/null; done

else
echo "Error: you are not using macOS."
fi
